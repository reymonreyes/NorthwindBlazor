@page "/categories/create"
@page "/categories/edit/{id:int}"
@using Northwind.Blazor.Helpers
@using Northwind.Blazor.Models
@using Northwind.Common.Enums
@using Northwind.Core.Interfaces.Services
@inject NavigationManager NavigationManager
@inject ICategoriesService CategoriesService
@inject ISnackbar Snackbar

<MudPaper Elevation="2" Class="my-1">
    <MudToolBar>
        <MudText><EntryModePageHeader Mode="_mode" DisplayName="Product"/></MudText>        
    </MudToolBar>
</MudPaper>

@if (_category != null)
{
<EditForm Model="@_category" OnValidSubmit="Save">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem lg="6" sm="12" xs="12">            
            <MudTextField Label="Name" @bind-Value="_category.Name" For="@(() => _category.Name)"/>    
            <MudTextField T="string" Label="Description" @bind-Value="_category.Description" For="@(() => _category.Description)" Lines="3" Variant="Variant.Outlined"/>            
            <div class="d-flex justify-end mt-2">
                <MudButton Link="categories" Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small" Class="mr-1">Cancel</MudButton>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@_saveButtonText</MudButton>
            </div>
        </MudItem>
    </MudGrid>
</EditForm>
}
@code {
    private EntryMode _mode = EntryMode.Create;
    private Category? _category;
    private string _saveButtonText = "Save";
    [Parameter]
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        _mode = NavigationManager.Uri.Contains("create") ? EntryMode.Create : EntryMode.Edit;
        _category = _mode == EntryMode.Create ? new Category() : null;
    }

    private async Task Save()
    {
        var categoryDto = MapperHelper.ToCategoryDto(_category);
        if(categoryDto is not null)
        {
            _saveButtonText = "Saving...";

            switch (_mode)
            {
                case EntryMode.Create:
                    await CategoriesService.Create(categoryDto);
                    Notify("Category created successfully.", true);
                    break;
            }

            _saveButtonText = "Save";
            NavigationManager.NavigateTo("categories");
        }
    }

    private void Notify(string message, bool isSuccessful)
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
        Snackbar.Add(message, isSuccessful ? Severity.Success : Severity.Error);
    }
}
