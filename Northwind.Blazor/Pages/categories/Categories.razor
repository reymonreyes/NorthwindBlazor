@page "/categories"
@{
    //using Northwind.Core.Dtos
}
@using Northwind.Blazor.Helpers
@using Northwind.Blazor.Models
@using Northwind.Core.Dtos
@using Northwind.Core.Interfaces.Services
@inject ICategoriesService CategoriesService
@inject IDialogService DialogService
@inherits PageBase

<MudPaper Elevation="2" Class="my-1">
    <MudToolBar>
        <MudText>Categories</MudText>
        <MudSpacer/>
        <MudButton Link="categories/create" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small">Create Category</MudButton>
    </MudToolBar>
</MudPaper>

@if (IsLoading)
{
    <MudProgressLinear Indeterminate="true"/>
}

@if(!_categories.Any())
{
    <MudAlert Severity="Severity.Info" Variant="Variant.Text">No categories found.</MudAlert>
}
else
{
<MudSimpleTable Style="overflow-x: auto;" Dense="true" Hover="true" Bordered="true">
    <thead>
        <tr class="text-center">
            <th>Name</th><th>Description</th><th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var category in _categories)
        {           
            <tr>
                <td>@category.Name</td>
                <td>@category.Description</td>
                    <td>
                        <MudButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary" OnClick="Edit">Edit</MudButton>
                   </td>
            </tr>
        }
    </tbody>
</MudSimpleTable>
}
@code {
    private ICollection<Category> _categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        ICollection<CategoryDto> categories = await CategoriesService.GetAll();
        _categories = categories.Select(x => MapperHelper.ToCategory(x)).ToList();
        IsLoading = false;
    }

    private async Task Edit()
    {
        var result = await DialogService.ShowMessageBox("Edit", "Edit message");
    }
}
