@page "/suppliers"
@using Northwind.Blazor.Helpers
@using Northwind.Blazor.Models
@using Northwind.Core.Interfaces.Services
@inherits PageBase
@inject ISuppliersService SuppliersService
<MudPaper Elevation="2" Class="my-1">
    <MudToolBar>
        <MudText>Suppliers</MudText>
        <MudSpacer />
        <MudButton Link="suppliers/create" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small">Create Supplier</MudButton>
    </MudToolBar>
</MudPaper>

@if(IsLoading)
{
    <MudProgressLinear Indeterminate="true"/>
}
@if(!_suppliers.Any())
{
    <MudAlert Severity="Severity.Info" Variant="Variant.Text">No suppliers found.</MudAlert>
}
else
{   
<MudSimpleTable Style="overflow-x: auto;" Dense="true" Hover="true" Bordered="true">
    <thead>
        <tr class="text-center">
            <th>Name</th>
            <th>Contact Name</th>
            <th>Contact Title</th>
            <th>Phone</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var supplier in _suppliers)
    {
        if (supplier is not null)
        {
        <tr>               
            <td class="d-flex">
                <MudLink Href="@string.Format("suppliers/{0}", supplier.Id)" Underline="Underline.None" Class="flex-grow-1">@supplier.Name</MudLink>
            </td>
            <td>@supplier.ContactName</td>
            <td>@supplier.ContactTitle</td>
            <td>@supplier.Phone</td>
        </tr>
        }
    }
    </tbody>
</MudSimpleTable>
}
@code {
    private ICollection<Supplier?> _suppliers = new List<Supplier?>();

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        try
        {
            var suppliers = await SuppliersService.GetAll();

            if(suppliers is not null)
            {
                _suppliers = suppliers.Select(x => MapperHelper.ToSupplier(x)).ToList();
            }
        }
        catch(Exception exc)
        {
            //add some error logging
            throw exc;    
        }

        IsLoading = false;
    }
}
