@page "/products"
@using Northwind.Blazor.Models
@using Northwind.Core.Dtos
@using Northwind.Core.Interfaces.Services
@inject IProductsService _productsSvc
@inherits PageBase

<MudPaper Elevation="2" Class="my-1">
    <MudToolBar>
        <MudText>Products</MudText>
        <MudSpacer/>
        <MudButton Link="products/create" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small">Create Product</MudButton>
    </MudToolBar>
</MudPaper>
@if (IsLoading)
{
    <MudProgressLinear Indeterminate="true"/>
}

@if(!_products.Any())
{
    <MudAlert Severity="Severity.Info" Variant="Variant.Text">No products found.</MudAlert>
}
else
{   
<MudSimpleTable Style="overflow-x: auto;" Dense="true" Hover="true" Bordered="true">
    <thead>
        <tr class="text-center">
            <th>Name</th><th>Code</th><th>Unit Price</th><th>Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in _products)
        {
            <tr>
                <td><NavLink href="@string.Format("products/{0}", product.Id)">@product.Name</NavLink></td>
                <td>@product.Code</td>
                <td class="text-end">@product.UnitPrice.ToString("C")</td>
                <td>@product.Description</td>
            </tr>
        }
    </tbody>
</MudSimpleTable>
}
@code {
    private ICollection<ProductDto> _products = new List<ProductDto>();

    protected override async Task OnInitializedAsync()
    {        
        _products = await _productsSvc.GetAll();
        base.OnInitialized();
    }
}
