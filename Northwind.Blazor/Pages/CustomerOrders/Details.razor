@page "/customerorders/create"
@page "/customerorders/{id:int}"
@using Northwind.Core.Dtos
@using Northwind.Core.Interfaces.Services
@inherits PageBase

<MudToolBar>
    <MudText><b>Customer Order</b></MudText>
</MudToolBar>
<MudDivider DividerType="DividerType.FullWidth" Light="true" />
<MudGrid Class="pt-3" Spacing="3">
    <MudItem sm="12" md="6" lg="6" Style="position: relative;">
        <MudOverlay Visible="_isCustomerOrderFormOverlayVisible" Absolute="true" DarkBackground="true">
            <MudStack>
                <MudText Style="@($"color:{Colors.Shades.White};")">Processing...</MudText>
                <MudProgressCircular Class="align-self-center" Color="Color.Primary" Indeterminate="true" />
            </MudStack>
        </MudOverlay>
        @if (_customerOrder is not null)
        {
            <MudForm @ref="_customerOrderForm" @bind-IsValid="_isCustomerOrderFormValid" Model="_customerOrder" Validation="(_customerOrderValidator.ValidateValue)">
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12" lg="12">
                        <MudPaper Elevation="1" Square="true">
                            <MudToolBar>
                                <MudText>Order # <b>@_customerOrder.Id</b></MudText>
                                <MudSpacer />
                                <MudButton OnClick="Save" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small" Class="mr-1">Save</MudButton>
                            </MudToolBar>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="12" sm="12" md="12" lg="12">
                        @if (_errors.Count > 0)
                        {
                            <MudAlert Severity="MudBlazor.Severity.Error">
                                @foreach (var error in _errors)
                                {
                                    <MudText>@error</MudText>
                                }
                            </MudAlert>
                        }
                    </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="12">
                    <MudAutocomplete @bind-Value="_customerOrder.Customer" Label="Customer" SearchFunc="@FindCustomer" ToStringFunc="@(x => x == null ? null : $"{x.Name}")" For="@(() => _customerOrder.Customer)"
                        ResetValueOnEmptyText="true" Immediate="true" ProgressIndicatorColor="Color.Info" Variant="Variant.Outlined" Margin="Margin.Dense"></MudAutocomplete>
                </MudItem>
                <MudItem md="4" lg="4">
                    <MudDatePicker @bind-Date="_customerOrder.OrderDate" For="@(() => _customerOrder.OrderDate)" Label="Order Date" Editable="true" Mask="@(new DateMask("0000-00-00"))" DateFormat="yyyy-MM-dd" />
                </MudItem>
                <MudItem md="4" lg="4">
                    <MudDatePicker @bind-Date="_customerOrder.DueDate" For="@(() => _customerOrder.DueDate)" Label="Due Date" />
                </MudItem>
                <MudItem md="4" lg="4">
                    <MudDatePicker @bind-Date="_customerOrder.ShipDate" For="@(() => _customerOrder.ShipDate)" Label="Ship Date" />
                </MudItem>
                <MudItem md="6" lg="6">
                    <MudAutocomplete @bind-Value="_customerOrder.Shipper" Label="Shipper" SearchFunc="@FindShipper" ToStringFunc="@(x => x == null ? null : $"{x.Name}")"
                        For="@(() => _customerOrder.Shipper)" ResetValueOnEmptyText="true" Immediate="true" ProgressIndicatorColor="Color.Info" Variant="Variant.Outlined" Margin="Margin.Dense"></MudAutocomplete>
                </MudItem>
                <MudItem md="6" lg="6">
                    <MudTextField @bind-Value="_customerOrder.ShipTo" For="@(() => _customerOrder.ShipTo)" Label="Ship To"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" lg="12">
                    <MudTextField @bind-Value="_customerOrder.Notes" For="@(() => _customerOrder.Notes)" Label="Notes" Lines="3"></MudTextField>
                </MudItem>
            </MudGrid>
        </MudForm>
        }
    </MudItem>
    <MudItem sm="12" md="6" lg="6" Style="position: relative;">
        <MudOverlay Visible="_isCustomerOrderItemFormOverlayVisible" Absolute="true" DarkBackground="true">
            <MudStack>
                <MudText Style="@($"color:{Colors.Shades.White};")">Processing...</MudText>
                <MudProgressCircular Class="align-self-center" Color="Color.Primary" Indeterminate="true" />
            </MudStack>
        </MudOverlay>
        <MudPaper Elevation="0">
            <MudForm @ref="_addItemForm" Model="_customerOrderItem" @bind-IsValid="_isCustomerOrderItemFormValid" Validation="(_customerOrderItemValidator.ValidateValue)">
                <MudGrid>
                    <MudItem md="6">
                        <MudAutocomplete T="ProductDto" Label="Product" Value="_customerOrderItem.Product" SearchFunc="@FindProducts" ToStringFunc="@(x => x == null ? null : $"{x.Name}")" For="@(() => _customerOrderItem.Product)" 
                            ValueChanged="OnProductValueChanged" ResetValueOnEmptyText="true" Immediate="true" ProgressIndicatorColor="Color.Info" Variant="Variant.Outlined" Margin="Margin.Dense"></MudAutocomplete>
                    </MudItem>
                    <MudItem md="2">
                        <MudNumericField @bind-Value="_customerOrderItem.Qty" For="@(() => _customerOrderItem.Qty)" Label="Qty" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.End"></MudNumericField>
                    </MudItem>
                    <MudItem md="2">
                        <MudNumericField @bind-Value="_customerOrderItem.UnitPrice" For="@(() => _customerOrderItem.UnitPrice)" Label="Unit Price" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.End"></MudNumericField>
                    </MudItem>
                    <MudItem md="2" Class="d-flex px-8 pt-1">
                        <MudButton OnClick="AddItemAsync" Class="align-self-center" Size="Size.Small" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Add</MudButton>
                    </MudItem>
                </MudGrid>
            </MudForm>
        </MudPaper>
        <MudSimpleTable Style="overflow-x: auto;" Hover="true" Bordered="true" Dense="true">
            <colgroup>
                <col />
                <col width="15%" />
                <col width="15%" />
                <col />
                <col width="11%" />
            </colgroup>
            <thead>
                <tr>
                    <th style="text-align:center;">Product</th>
                    <th style="text-align:center;">Qty</th>
                    <th style="text-align:center;">Unit Price</th>
                    <th style="text-align:center;">Total</th>
                    <th style="text-align:center;"></th>
                </tr>
            </thead>
            <tbody>
                @if (_customerOrder.Items is not null)
                {
                    @foreach (var item in _customerOrder.Items)
                    {
                        if (item.IsInEditMode)
                        {
                            @* item.EditItem = @<Northwind.Blazor.Components.EditPurchaseOrderItem Item="item" OnUpdateItem="UpdateItem" OnCancelUpdateItem="CancelUpdateItem"></Northwind.Blazor.Components.EditPurchaseOrderItem>
                            ; *@
                            <tr><td colspan="5">TODO: EDIT MODE</td></tr>
                        }
                        else
                        {
                            <tr>
                                <td>@item.Product.Id</td>
                                <td style="text-align:right;">@item.Qty</td>
                                <td style="text-align:right;">@item.UnitPrice.ToString("N")</td>
                                <td style="text-align:right;">@item.Total.ToString("N")</td>
                                <td style="text-align: center;">
                                    @* <MudIconButton OnClick="() => EditItem(item)" Icon="@Icons.Material.Filled.Edit" aria-label="delete" Size="Size.Small"></MudIconButton>
                                    <MudIconButton OnClick="() => RemoveItem(item)" Icon="@Icons.Material.Filled.Close" aria-label="delete" Size="Size.Small"></MudIconButton> *@
                                </td>
                            </tr>
                        }
                    }
                }                
            </tbody>
        </MudSimpleTable>
    </MudItem>
</MudGrid>